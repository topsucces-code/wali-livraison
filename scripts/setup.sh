#!/bin/bash

# Script de configuration automatique pour WALI Livraison
# Bash Script pour Linux/Mac

echo "üöÄ Configuration de l'environnement WALI Livraison..."

# Couleurs pour l'affichage
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# V√©rification des pr√©requis
echo -e "${YELLOW}üìã V√©rification des pr√©requis...${NC}"

# V√©rifier Node.js
if command -v node &> /dev/null; then
    NODE_VERSION=$(node --version)
    echo -e "${GREEN}‚úÖ Node.js d√©tect√©: $NODE_VERSION${NC}"
else
    echo -e "${RED}‚ùå Node.js non trouv√©. Veuillez installer Node.js 18+${NC}"
    exit 1
fi

# V√©rifier npm
if command -v npm &> /dev/null; then
    NPM_VERSION=$(npm --version)
    echo -e "${GREEN}‚úÖ npm d√©tect√©: $NPM_VERSION${NC}"
else
    echo -e "${RED}‚ùå npm non trouv√©${NC}"
    exit 1
fi

# V√©rifier Docker (optionnel)
DOCKER_AVAILABLE=false
if command -v docker &> /dev/null; then
    DOCKER_VERSION=$(docker --version)
    echo -e "${GREEN}‚úÖ Docker d√©tect√©: $DOCKER_VERSION${NC}"
    DOCKER_AVAILABLE=true
else
    echo -e "${YELLOW}‚ö†Ô∏è Docker non trouv√©. Les services seront configur√©s manuellement.${NC}"
fi

# Configuration de l'environnement
echo -e "${YELLOW}üîß Configuration de l'environnement...${NC}"

# Copier le fichier .env
if [ ! -f ".env" ]; then
    cp .env.example .env
    echo -e "${GREEN}‚úÖ Fichier .env cr√©√©${NC}"
else
    echo -e "${BLUE}‚ÑπÔ∏è Fichier .env existe d√©j√†${NC}"
fi

# Installation des d√©pendances
echo -e "${YELLOW}üì¶ Installation des d√©pendances...${NC}"
echo -e "${BLUE}‚è≥ Cela peut prendre plusieurs minutes...${NC}"

if npm install --legacy-peer-deps; then
    echo -e "${GREEN}‚úÖ D√©pendances install√©es avec succ√®s${NC}"
else
    echo -e "${RED}‚ùå Erreur lors de l'installation des d√©pendances${NC}"
    echo -e "${YELLOW}üí° Essayez: npm install --force${NC}"
fi

# D√©marrage des services Docker (si disponible)
if [ "$DOCKER_AVAILABLE" = true ]; then
    echo -e "${YELLOW}üê≥ D√©marrage des services Docker...${NC}"
    
    if docker-compose -f docker-compose.dev.yml up -d postgres redis; then
        echo -e "${GREEN}‚úÖ Services Docker d√©marr√©s${NC}"
        sleep 5
    else
        echo -e "${YELLOW}‚ö†Ô∏è Erreur Docker. V√©rifiez que Docker Desktop est d√©marr√©.${NC}"
        DOCKER_AVAILABLE=false
    fi
fi

# Configuration de la base de donn√©es
if [ "$DOCKER_AVAILABLE" = true ]; then
    echo -e "${YELLOW}üóÑÔ∏è Configuration de la base de donn√©es...${NC}"
    
    cd packages/database
    
    if npm run db:generate; then
        echo -e "${GREEN}‚úÖ Client Prisma g√©n√©r√©${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Erreur lors de la g√©n√©ration du client Prisma${NC}"
    fi
    
    if npm run db:push; then
        echo -e "${GREEN}‚úÖ Base de donn√©es configur√©e${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Erreur de configuration de la base de donn√©es${NC}"
    fi
    
    cd ../..
fi

# R√©sum√© de la configuration
echo -e "\n${GREEN}üéâ Configuration termin√©e !${NC}"
echo -e "${YELLOW}üìã R√©sum√©:${NC}"

if [ "$DOCKER_AVAILABLE" = true ]; then
    echo -e "${GREEN}‚úÖ Services Docker: PostgreSQL et Redis d√©marr√©s${NC}"
    echo -e "${GREEN}‚úÖ Base de donn√©es: Configur√©e${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Services Docker: Non disponibles${NC}"
    echo -e "${BLUE}üí° Configurez PostgreSQL et Redis manuellement${NC}"
fi

echo -e "${GREEN}‚úÖ D√©pendances: Install√©es${NC}"
echo -e "${GREEN}‚úÖ Environnement: Configur√©${NC}"

# Instructions de d√©marrage
echo -e "\n${CYAN}üöÄ Pour d√©marrer le projet:${NC}"
echo -e "npm run dev"

echo -e "\n${CYAN}üì± URLs d'acc√®s:${NC}"
echo -e "‚Ä¢ API Backend: http://localhost:3001"
echo -e "‚Ä¢ Client Web: http://localhost:3000"
echo -e "‚Ä¢ Admin Panel: http://localhost:3002"
echo -e "‚Ä¢ Documentation API: http://localhost:3001/api/docs"

if [ "$DOCKER_AVAILABLE" = true ]; then
    echo -e "‚Ä¢ Adminer (DB): http://localhost:8080"
fi

echo -e "\n${CYAN}üìö Documentation:${NC}"
echo -e "‚Ä¢ README.md - Vue d'ensemble"
echo -e "‚Ä¢ SETUP_STATUS.md - √âtat de la configuration"
echo -e "‚Ä¢ PLAN_DEVELOPPEMENT.md - Plan d√©taill√©"

echo -e "\n${GREEN}üéØ Le projet WALI Livraison est pr√™t pour le d√©veloppement !${NC}"
